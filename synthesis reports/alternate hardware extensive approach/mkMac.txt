
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Parsing `mkMac.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: mkMac.v
Parsing Verilog input from `mkMac.v' to AST representation.
Warning: Found one of those horrible `(synopsys|synthesis) translate_off' comments.
Yosys does support them but it is recommended to use `ifdef constructs instead!
Generating RTLIL representation for module `\mkMac'.
Note: Assuming pure combinatorial block at mkMac.v:2002 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2012 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2022 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2032 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2042 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2052 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2062 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2072 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2082 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2092 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2102 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2112 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2122 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2132 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2142 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2152 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2162 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2172 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2182 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2192 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2202 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2212 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2222 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2232 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2242 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2252 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2262 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2272 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2282 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2292 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2302 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2312 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2322 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2332 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2342 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2352 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2362 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2372 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2382 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2392 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2402 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2412 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2422 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2432 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2442 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2452 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2462 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2472 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2482 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2492 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2502 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2512 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2522 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2532 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2542 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2552 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2562 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2572 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2582 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2592 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2602 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2612 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkMac.v:2622 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

-- Running command `synth' --

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$mkMac.v:2635$842 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2622$841 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2612$840 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2602$839 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2592$838 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2582$837 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2572$836 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2562$835 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2552$834 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2542$833 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2532$832 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2522$831 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2512$830 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2502$829 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2492$828 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2482$827 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2472$826 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2462$825 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2452$824 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2442$823 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2432$822 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2422$821 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2412$820 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2402$819 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2392$818 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2382$817 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2372$816 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2362$815 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2352$814 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2342$813 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2332$812 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2322$811 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2312$810 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2302$809 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2292$808 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2282$807 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2272$806 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2262$805 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2252$804 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2242$803 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2232$802 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2222$801 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2212$800 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2202$799 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2192$798 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2182$797 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2172$796 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2162$795 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2152$794 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2142$793 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2132$792 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2122$791 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2112$790 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2102$789 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2092$788 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2082$787 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2072$786 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2062$785 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2052$784 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2042$783 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2032$782 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2022$781 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2012$780 in module mkMac.
Marked 1 switch rules as full_case in process $proc$mkMac.v:2002$779 in module mkMac.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\mkMac.$proc$mkMac.v:2635$842'.
     1/9: $0\zero[0:0]
     2/9: $0\start[1:0]
     3/9: $0\p3_accumulate[127:0]
     4/9: $0\p2_product[127:0]
     5/9: $0\p1_q[63:0]
     6/9: $0\p1_m[63:0]
     7/9: $0\output_acc[127:0]
     8/9: $0\input_q[63:0]
     9/9: $0\input_m[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2622$841'.
     1/2: $1\_theResult____h1933[63:0]
     2/2: $0\_theResult____h1933[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2612$840'.
     1/2: $1\_theResult____h1976[63:0]
     2/2: $0\_theResult____h1976[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2602$839'.
     1/2: $1\_theResult____h1994[63:0]
     2/2: $0\_theResult____h1994[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2592$838'.
     1/2: $1\_theResult____h2012[63:0]
     2/2: $0\_theResult____h2012[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2582$837'.
     1/2: $1\_theResult____h2030[63:0]
     2/2: $0\_theResult____h2030[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2572$836'.
     1/2: $1\_theResult____h2048[63:0]
     2/2: $0\_theResult____h2048[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2562$835'.
     1/2: $1\_theResult____h2066[63:0]
     2/2: $0\_theResult____h2066[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2552$834'.
     1/2: $1\_theResult____h2084[63:0]
     2/2: $0\_theResult____h2084[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2542$833'.
     1/2: $1\_theResult____h2102[63:0]
     2/2: $0\_theResult____h2102[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2532$832'.
     1/2: $1\_theResult____h2120[63:0]
     2/2: $0\_theResult____h2120[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2522$831'.
     1/2: $1\_theResult____h2138[63:0]
     2/2: $0\_theResult____h2138[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2512$830'.
     1/2: $1\_theResult____h2156[63:0]
     2/2: $0\_theResult____h2156[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2502$829'.
     1/2: $1\_theResult____h2174[63:0]
     2/2: $0\_theResult____h2174[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2492$828'.
     1/2: $1\_theResult____h2192[63:0]
     2/2: $0\_theResult____h2192[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2482$827'.
     1/2: $1\_theResult____h2210[63:0]
     2/2: $0\_theResult____h2210[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2472$826'.
     1/2: $1\_theResult____h2228[63:0]
     2/2: $0\_theResult____h2228[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2462$825'.
     1/2: $1\_theResult____h2246[63:0]
     2/2: $0\_theResult____h2246[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2452$824'.
     1/2: $1\_theResult____h2264[63:0]
     2/2: $0\_theResult____h2264[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2442$823'.
     1/2: $1\_theResult____h2282[63:0]
     2/2: $0\_theResult____h2282[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2432$822'.
     1/2: $1\_theResult____h2300[63:0]
     2/2: $0\_theResult____h2300[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2422$821'.
     1/2: $1\_theResult____h2318[63:0]
     2/2: $0\_theResult____h2318[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2412$820'.
     1/2: $1\_theResult____h2336[63:0]
     2/2: $0\_theResult____h2336[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2402$819'.
     1/2: $1\_theResult____h2354[63:0]
     2/2: $0\_theResult____h2354[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2392$818'.
     1/2: $1\_theResult____h2372[63:0]
     2/2: $0\_theResult____h2372[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2382$817'.
     1/2: $1\_theResult____h2390[63:0]
     2/2: $0\_theResult____h2390[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2372$816'.
     1/2: $1\_theResult____h2408[63:0]
     2/2: $0\_theResult____h2408[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2362$815'.
     1/2: $1\_theResult____h2426[63:0]
     2/2: $0\_theResult____h2426[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2352$814'.
     1/2: $1\_theResult____h2444[63:0]
     2/2: $0\_theResult____h2444[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2342$813'.
     1/2: $1\_theResult____h2462[63:0]
     2/2: $0\_theResult____h2462[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2332$812'.
     1/2: $1\_theResult____h2480[63:0]
     2/2: $0\_theResult____h2480[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2322$811'.
     1/2: $1\_theResult____h2498[63:0]
     2/2: $0\_theResult____h2498[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2312$810'.
     1/2: $1\_theResult____h2516[63:0]
     2/2: $0\_theResult____h2516[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2302$809'.
     1/2: $1\_theResult____h2534[63:0]
     2/2: $0\_theResult____h2534[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2292$808'.
     1/2: $1\_theResult____h2552[63:0]
     2/2: $0\_theResult____h2552[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2282$807'.
     1/2: $1\_theResult____h2570[63:0]
     2/2: $0\_theResult____h2570[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2272$806'.
     1/2: $1\_theResult____h2588[63:0]
     2/2: $0\_theResult____h2588[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2262$805'.
     1/2: $1\_theResult____h2606[63:0]
     2/2: $0\_theResult____h2606[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2252$804'.
     1/2: $1\_theResult____h2624[63:0]
     2/2: $0\_theResult____h2624[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2242$803'.
     1/2: $1\_theResult____h2642[63:0]
     2/2: $0\_theResult____h2642[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2232$802'.
     1/2: $1\_theResult____h2660[63:0]
     2/2: $0\_theResult____h2660[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2222$801'.
     1/2: $1\_theResult____h2678[63:0]
     2/2: $0\_theResult____h2678[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2212$800'.
     1/2: $1\_theResult____h2696[63:0]
     2/2: $0\_theResult____h2696[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2202$799'.
     1/2: $1\_theResult____h2714[63:0]
     2/2: $0\_theResult____h2714[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2192$798'.
     1/2: $1\_theResult____h2732[63:0]
     2/2: $0\_theResult____h2732[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2182$797'.
     1/2: $1\_theResult____h2750[63:0]
     2/2: $0\_theResult____h2750[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2172$796'.
     1/2: $1\_theResult____h2768[63:0]
     2/2: $0\_theResult____h2768[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2162$795'.
     1/2: $1\_theResult____h2786[63:0]
     2/2: $0\_theResult____h2786[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2152$794'.
     1/2: $1\_theResult____h2804[63:0]
     2/2: $0\_theResult____h2804[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2142$793'.
     1/2: $1\_theResult____h2822[63:0]
     2/2: $0\_theResult____h2822[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2132$792'.
     1/2: $1\_theResult____h2840[63:0]
     2/2: $0\_theResult____h2840[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2122$791'.
     1/2: $1\_theResult____h2858[63:0]
     2/2: $0\_theResult____h2858[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2112$790'.
     1/2: $1\_theResult____h2876[63:0]
     2/2: $0\_theResult____h2876[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2102$789'.
     1/2: $1\_theResult____h2894[63:0]
     2/2: $0\_theResult____h2894[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2092$788'.
     1/2: $1\_theResult____h2912[63:0]
     2/2: $0\_theResult____h2912[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2082$787'.
     1/2: $1\_theResult____h2930[63:0]
     2/2: $0\_theResult____h2930[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2072$786'.
     1/2: $1\_theResult____h2948[63:0]
     2/2: $0\_theResult____h2948[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2062$785'.
     1/2: $1\_theResult____h2966[63:0]
     2/2: $0\_theResult____h2966[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2052$784'.
     1/2: $1\_theResult____h2984[63:0]
     2/2: $0\_theResult____h2984[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2042$783'.
     1/2: $1\_theResult____h3002[63:0]
     2/2: $0\_theResult____h3002[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2032$782'.
     1/2: $1\_theResult____h3020[63:0]
     2/2: $0\_theResult____h3020[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2022$781'.
     1/2: $1\_theResult____h3038[63:0]
     2/2: $0\_theResult____h3038[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2012$780'.
     1/2: $1\_theResult____h3056[63:0]
     2/2: $0\_theResult____h3056[63:0]
Creating decoders for process `\mkMac.$proc$mkMac.v:2002$779'.
     1/2: $1\_theResult____h3074[63:0]
     2/2: $0\_theResult____h3074[63:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\mkMac.\_theResult____h1933' from process `\mkMac.$proc$mkMac.v:2622$841'.
No latch inferred for signal `\mkMac.\_theResult____h1976' from process `\mkMac.$proc$mkMac.v:2612$840'.
No latch inferred for signal `\mkMac.\_theResult____h1994' from process `\mkMac.$proc$mkMac.v:2602$839'.
No latch inferred for signal `\mkMac.\_theResult____h2012' from process `\mkMac.$proc$mkMac.v:2592$838'.
No latch inferred for signal `\mkMac.\_theResult____h2030' from process `\mkMac.$proc$mkMac.v:2582$837'.
No latch inferred for signal `\mkMac.\_theResult____h2048' from process `\mkMac.$proc$mkMac.v:2572$836'.
No latch inferred for signal `\mkMac.\_theResult____h2066' from process `\mkMac.$proc$mkMac.v:2562$835'.
No latch inferred for signal `\mkMac.\_theResult____h2084' from process `\mkMac.$proc$mkMac.v:2552$834'.
No latch inferred for signal `\mkMac.\_theResult____h2102' from process `\mkMac.$proc$mkMac.v:2542$833'.
No latch inferred for signal `\mkMac.\_theResult____h2120' from process `\mkMac.$proc$mkMac.v:2532$832'.
No latch inferred for signal `\mkMac.\_theResult____h2138' from process `\mkMac.$proc$mkMac.v:2522$831'.
No latch inferred for signal `\mkMac.\_theResult____h2156' from process `\mkMac.$proc$mkMac.v:2512$830'.
No latch inferred for signal `\mkMac.\_theResult____h2174' from process `\mkMac.$proc$mkMac.v:2502$829'.
No latch inferred for signal `\mkMac.\_theResult____h2192' from process `\mkMac.$proc$mkMac.v:2492$828'.
No latch inferred for signal `\mkMac.\_theResult____h2210' from process `\mkMac.$proc$mkMac.v:2482$827'.
No latch inferred for signal `\mkMac.\_theResult____h2228' from process `\mkMac.$proc$mkMac.v:2472$826'.
No latch inferred for signal `\mkMac.\_theResult____h2246' from process `\mkMac.$proc$mkMac.v:2462$825'.
No latch inferred for signal `\mkMac.\_theResult____h2264' from process `\mkMac.$proc$mkMac.v:2452$824'.
No latch inferred for signal `\mkMac.\_theResult____h2282' from process `\mkMac.$proc$mkMac.v:2442$823'.
No latch inferred for signal `\mkMac.\_theResult____h2300' from process `\mkMac.$proc$mkMac.v:2432$822'.
No latch inferred for signal `\mkMac.\_theResult____h2318' from process `\mkMac.$proc$mkMac.v:2422$821'.
No latch inferred for signal `\mkMac.\_theResult____h2336' from process `\mkMac.$proc$mkMac.v:2412$820'.
No latch inferred for signal `\mkMac.\_theResult____h2354' from process `\mkMac.$proc$mkMac.v:2402$819'.
No latch inferred for signal `\mkMac.\_theResult____h2372' from process `\mkMac.$proc$mkMac.v:2392$818'.
No latch inferred for signal `\mkMac.\_theResult____h2390' from process `\mkMac.$proc$mkMac.v:2382$817'.
No latch inferred for signal `\mkMac.\_theResult____h2408' from process `\mkMac.$proc$mkMac.v:2372$816'.
No latch inferred for signal `\mkMac.\_theResult____h2426' from process `\mkMac.$proc$mkMac.v:2362$815'.
No latch inferred for signal `\mkMac.\_theResult____h2444' from process `\mkMac.$proc$mkMac.v:2352$814'.
No latch inferred for signal `\mkMac.\_theResult____h2462' from process `\mkMac.$proc$mkMac.v:2342$813'.
No latch inferred for signal `\mkMac.\_theResult____h2480' from process `\mkMac.$proc$mkMac.v:2332$812'.
No latch inferred for signal `\mkMac.\_theResult____h2498' from process `\mkMac.$proc$mkMac.v:2322$811'.
No latch inferred for signal `\mkMac.\_theResult____h2516' from process `\mkMac.$proc$mkMac.v:2312$810'.
No latch inferred for signal `\mkMac.\_theResult____h2534' from process `\mkMac.$proc$mkMac.v:2302$809'.
No latch inferred for signal `\mkMac.\_theResult____h2552' from process `\mkMac.$proc$mkMac.v:2292$808'.
No latch inferred for signal `\mkMac.\_theResult____h2570' from process `\mkMac.$proc$mkMac.v:2282$807'.
No latch inferred for signal `\mkMac.\_theResult____h2588' from process `\mkMac.$proc$mkMac.v:2272$806'.
No latch inferred for signal `\mkMac.\_theResult____h2606' from process `\mkMac.$proc$mkMac.v:2262$805'.
No latch inferred for signal `\mkMac.\_theResult____h2624' from process `\mkMac.$proc$mkMac.v:2252$804'.
No latch inferred for signal `\mkMac.\_theResult____h2642' from process `\mkMac.$proc$mkMac.v:2242$803'.
No latch inferred for signal `\mkMac.\_theResult____h2660' from process `\mkMac.$proc$mkMac.v:2232$802'.
No latch inferred for signal `\mkMac.\_theResult____h2678' from process `\mkMac.$proc$mkMac.v:2222$801'.
No latch inferred for signal `\mkMac.\_theResult____h2696' from process `\mkMac.$proc$mkMac.v:2212$800'.
No latch inferred for signal `\mkMac.\_theResult____h2714' from process `\mkMac.$proc$mkMac.v:2202$799'.
No latch inferred for signal `\mkMac.\_theResult____h2732' from process `\mkMac.$proc$mkMac.v:2192$798'.
No latch inferred for signal `\mkMac.\_theResult____h2750' from process `\mkMac.$proc$mkMac.v:2182$797'.
No latch inferred for signal `\mkMac.\_theResult____h2768' from process `\mkMac.$proc$mkMac.v:2172$796'.
No latch inferred for signal `\mkMac.\_theResult____h2786' from process `\mkMac.$proc$mkMac.v:2162$795'.
No latch inferred for signal `\mkMac.\_theResult____h2804' from process `\mkMac.$proc$mkMac.v:2152$794'.
No latch inferred for signal `\mkMac.\_theResult____h2822' from process `\mkMac.$proc$mkMac.v:2142$793'.
No latch inferred for signal `\mkMac.\_theResult____h2840' from process `\mkMac.$proc$mkMac.v:2132$792'.
No latch inferred for signal `\mkMac.\_theResult____h2858' from process `\mkMac.$proc$mkMac.v:2122$791'.
No latch inferred for signal `\mkMac.\_theResult____h2876' from process `\mkMac.$proc$mkMac.v:2112$790'.
No latch inferred for signal `\mkMac.\_theResult____h2894' from process `\mkMac.$proc$mkMac.v:2102$789'.
No latch inferred for signal `\mkMac.\_theResult____h2912' from process `\mkMac.$proc$mkMac.v:2092$788'.
No latch inferred for signal `\mkMac.\_theResult____h2930' from process `\mkMac.$proc$mkMac.v:2082$787'.
No latch inferred for signal `\mkMac.\_theResult____h2948' from process `\mkMac.$proc$mkMac.v:2072$786'.
No latch inferred for signal `\mkMac.\_theResult____h2966' from process `\mkMac.$proc$mkMac.v:2062$785'.
No latch inferred for signal `\mkMac.\_theResult____h2984' from process `\mkMac.$proc$mkMac.v:2052$784'.
No latch inferred for signal `\mkMac.\_theResult____h3002' from process `\mkMac.$proc$mkMac.v:2042$783'.
No latch inferred for signal `\mkMac.\_theResult____h3020' from process `\mkMac.$proc$mkMac.v:2032$782'.
No latch inferred for signal `\mkMac.\_theResult____h3038' from process `\mkMac.$proc$mkMac.v:2022$781'.
No latch inferred for signal `\mkMac.\_theResult____h3056' from process `\mkMac.$proc$mkMac.v:2012$780'.
No latch inferred for signal `\mkMac.\_theResult____h3074' from process `\mkMac.$proc$mkMac.v:2002$779'.

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\mkMac.\input_m' using process `\mkMac.$proc$mkMac.v:2635$842'.
  created $dff cell `$procdff$1141' with positive edge clock.
Creating register for signal `\mkMac.\input_q' using process `\mkMac.$proc$mkMac.v:2635$842'.
  created $dff cell `$procdff$1142' with positive edge clock.
Creating register for signal `\mkMac.\output_acc' using process `\mkMac.$proc$mkMac.v:2635$842'.
  created $dff cell `$procdff$1143' with positive edge clock.
Creating register for signal `\mkMac.\p1_m' using process `\mkMac.$proc$mkMac.v:2635$842'.
  created $dff cell `$procdff$1144' with positive edge clock.
Creating register for signal `\mkMac.\p1_q' using process `\mkMac.$proc$mkMac.v:2635$842'.
  created $dff cell `$procdff$1145' with positive edge clock.
Creating register for signal `\mkMac.\p2_product' using process `\mkMac.$proc$mkMac.v:2635$842'.
  created $dff cell `$procdff$1146' with positive edge clock.
Creating register for signal `\mkMac.\p3_accumulate' using process `\mkMac.$proc$mkMac.v:2635$842'.
  created $dff cell `$procdff$1147' with positive edge clock.
Creating register for signal `\mkMac.\start' using process `\mkMac.$proc$mkMac.v:2635$842'.
  created $dff cell `$procdff$1148' with positive edge clock.
Creating register for signal `\mkMac.\zero' using process `\mkMac.$proc$mkMac.v:2635$842'.
  created $dff cell `$procdff$1149' with positive edge clock.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 10 empty switches in `\mkMac.$proc$mkMac.v:2635$842'.
Removing empty process `mkMac.$proc$mkMac.v:2635$842'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2622$841'.
Removing empty process `mkMac.$proc$mkMac.v:2622$841'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2612$840'.
Removing empty process `mkMac.$proc$mkMac.v:2612$840'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2602$839'.
Removing empty process `mkMac.$proc$mkMac.v:2602$839'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2592$838'.
Removing empty process `mkMac.$proc$mkMac.v:2592$838'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2582$837'.
Removing empty process `mkMac.$proc$mkMac.v:2582$837'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2572$836'.
Removing empty process `mkMac.$proc$mkMac.v:2572$836'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2562$835'.
Removing empty process `mkMac.$proc$mkMac.v:2562$835'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2552$834'.
Removing empty process `mkMac.$proc$mkMac.v:2552$834'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2542$833'.
Removing empty process `mkMac.$proc$mkMac.v:2542$833'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2532$832'.
Removing empty process `mkMac.$proc$mkMac.v:2532$832'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2522$831'.
Removing empty process `mkMac.$proc$mkMac.v:2522$831'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2512$830'.
Removing empty process `mkMac.$proc$mkMac.v:2512$830'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2502$829'.
Removing empty process `mkMac.$proc$mkMac.v:2502$829'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2492$828'.
Removing empty process `mkMac.$proc$mkMac.v:2492$828'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2482$827'.
Removing empty process `mkMac.$proc$mkMac.v:2482$827'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2472$826'.
Removing empty process `mkMac.$proc$mkMac.v:2472$826'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2462$825'.
Removing empty process `mkMac.$proc$mkMac.v:2462$825'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2452$824'.
Removing empty process `mkMac.$proc$mkMac.v:2452$824'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2442$823'.
Removing empty process `mkMac.$proc$mkMac.v:2442$823'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2432$822'.
Removing empty process `mkMac.$proc$mkMac.v:2432$822'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2422$821'.
Removing empty process `mkMac.$proc$mkMac.v:2422$821'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2412$820'.
Removing empty process `mkMac.$proc$mkMac.v:2412$820'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2402$819'.
Removing empty process `mkMac.$proc$mkMac.v:2402$819'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2392$818'.
Removing empty process `mkMac.$proc$mkMac.v:2392$818'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2382$817'.
Removing empty process `mkMac.$proc$mkMac.v:2382$817'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2372$816'.
Removing empty process `mkMac.$proc$mkMac.v:2372$816'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2362$815'.
Removing empty process `mkMac.$proc$mkMac.v:2362$815'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2352$814'.
Removing empty process `mkMac.$proc$mkMac.v:2352$814'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2342$813'.
Removing empty process `mkMac.$proc$mkMac.v:2342$813'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2332$812'.
Removing empty process `mkMac.$proc$mkMac.v:2332$812'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2322$811'.
Removing empty process `mkMac.$proc$mkMac.v:2322$811'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2312$810'.
Removing empty process `mkMac.$proc$mkMac.v:2312$810'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2302$809'.
Removing empty process `mkMac.$proc$mkMac.v:2302$809'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2292$808'.
Removing empty process `mkMac.$proc$mkMac.v:2292$808'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2282$807'.
Removing empty process `mkMac.$proc$mkMac.v:2282$807'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2272$806'.
Removing empty process `mkMac.$proc$mkMac.v:2272$806'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2262$805'.
Removing empty process `mkMac.$proc$mkMac.v:2262$805'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2252$804'.
Removing empty process `mkMac.$proc$mkMac.v:2252$804'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2242$803'.
Removing empty process `mkMac.$proc$mkMac.v:2242$803'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2232$802'.
Removing empty process `mkMac.$proc$mkMac.v:2232$802'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2222$801'.
Removing empty process `mkMac.$proc$mkMac.v:2222$801'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2212$800'.
Removing empty process `mkMac.$proc$mkMac.v:2212$800'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2202$799'.
Removing empty process `mkMac.$proc$mkMac.v:2202$799'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2192$798'.
Removing empty process `mkMac.$proc$mkMac.v:2192$798'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2182$797'.
Removing empty process `mkMac.$proc$mkMac.v:2182$797'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2172$796'.
Removing empty process `mkMac.$proc$mkMac.v:2172$796'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2162$795'.
Removing empty process `mkMac.$proc$mkMac.v:2162$795'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2152$794'.
Removing empty process `mkMac.$proc$mkMac.v:2152$794'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2142$793'.
Removing empty process `mkMac.$proc$mkMac.v:2142$793'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2132$792'.
Removing empty process `mkMac.$proc$mkMac.v:2132$792'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2122$791'.
Removing empty process `mkMac.$proc$mkMac.v:2122$791'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2112$790'.
Removing empty process `mkMac.$proc$mkMac.v:2112$790'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2102$789'.
Removing empty process `mkMac.$proc$mkMac.v:2102$789'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2092$788'.
Removing empty process `mkMac.$proc$mkMac.v:2092$788'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2082$787'.
Removing empty process `mkMac.$proc$mkMac.v:2082$787'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2072$786'.
Removing empty process `mkMac.$proc$mkMac.v:2072$786'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2062$785'.
Removing empty process `mkMac.$proc$mkMac.v:2062$785'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2052$784'.
Removing empty process `mkMac.$proc$mkMac.v:2052$784'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2042$783'.
Removing empty process `mkMac.$proc$mkMac.v:2042$783'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2032$782'.
Removing empty process `mkMac.$proc$mkMac.v:2032$782'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2022$781'.
Removing empty process `mkMac.$proc$mkMac.v:2022$781'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2012$780'.
Removing empty process `mkMac.$proc$mkMac.v:2012$780'.
Found and cleaned up 1 empty switch in `\mkMac.$proc$mkMac.v:2002$779'.
Removing empty process `mkMac.$proc$mkMac.v:2002$779'.
Cleaned up 73 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.
<suppressed ~13 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..
Removed 1 unused cells and 993 unused wires.
<suppressed ~2 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module mkMac..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkMac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkMac.
Performed a total of 0 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1149 ($dff) from module mkMac.
Replaced 1 DFF cells.

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.
<suppressed ~4 debug messages>

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkMac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkMac.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
Removed a total of 0 cells.

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.

2.6.16. Rerunning OPT passes. (Maybe there is more to do..)

2.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkMac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

2.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkMac.
Performed a total of 0 changes.

2.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
Removed a total of 0 cells.

2.6.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..

2.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.

2.6.23. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from mux cell mkMac.$ternary$mkMac.v:977$11 ($mux).
Removed top 1 bits (of 2) from port B of cell mkMac.$eq$mkMac.v:890$3 ($eq).
Removed top 127 bits (of 128) from mux cell mkMac.$ternary$mkMac.v:986$15 ($mux).
Removed top 63 bits (of 64) from port A of cell mkMac.$sub$mkMac.v:1073$60 ($sub).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$892_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$896_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$900_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$904_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$908_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$912_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$916_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$920_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$924_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$928_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$932_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$936_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$940_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$944_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$948_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$952_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$956_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$960_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$964_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$968_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$972_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$976_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$980_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$984_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$988_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$992_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$996_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1000_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1004_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1008_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1012_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1016_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1020_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1024_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1028_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1032_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1036_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1040_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1044_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1048_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1052_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1056_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1060_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1064_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1068_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1072_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1076_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1080_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1084_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1088_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1092_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1096_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1100_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1104_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1108_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1112_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1116_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1120_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1124_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1128_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1132_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1136_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkMac.$procmux$1140_CMP0 ($eq).
Removed top 127 bits (of 128) from wire mkMac.IF_t6392_XOR_IF_zero_THEN_1_ELSE_0_BIT_0_THEN__ETC__q2.
Removed top 1 bits (of 2) from wire mkMac.start$D_IN.

2.8. Executing PEEPOPT pass (run peephole optimizers).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~36 debug messages>

2.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mkMac:
  creating $macc model for $add$mkMac.v:1002$24 ($add).
  creating $macc model for $add$mkMac.v:1006$26 ($add).
  creating $macc model for $add$mkMac.v:1010$28 ($add).
  creating $macc model for $add$mkMac.v:1014$30 ($add).
  creating $macc model for $add$mkMac.v:1018$32 ($add).
  creating $macc model for $add$mkMac.v:1022$34 ($add).
  creating $macc model for $add$mkMac.v:1026$36 ($add).
  creating $macc model for $add$mkMac.v:1030$38 ($add).
  creating $macc model for $add$mkMac.v:1034$40 ($add).
  creating $macc model for $add$mkMac.v:1038$42 ($add).
  creating $macc model for $add$mkMac.v:1042$44 ($add).
  creating $macc model for $add$mkMac.v:1046$46 ($add).
  creating $macc model for $add$mkMac.v:1050$48 ($add).
  creating $macc model for $add$mkMac.v:1054$50 ($add).
  creating $macc model for $add$mkMac.v:1058$52 ($add).
  creating $macc model for $add$mkMac.v:1062$54 ($add).
  creating $macc model for $add$mkMac.v:1066$56 ($add).
  creating $macc model for $add$mkMac.v:1070$58 ($add).
  creating $macc model for $add$mkMac.v:1075$61 ($add).
  creating $macc model for $add$mkMac.v:1079$63 ($add).
  creating $macc model for $add$mkMac.v:1083$65 ($add).
  creating $macc model for $add$mkMac.v:1087$67 ($add).
  creating $macc model for $add$mkMac.v:1091$69 ($add).
  creating $macc model for $add$mkMac.v:1095$71 ($add).
  creating $macc model for $add$mkMac.v:1099$73 ($add).
  creating $macc model for $add$mkMac.v:1103$75 ($add).
  creating $macc model for $add$mkMac.v:1107$77 ($add).
  creating $macc model for $add$mkMac.v:1111$79 ($add).
  creating $macc model for $add$mkMac.v:1115$81 ($add).
  creating $macc model for $add$mkMac.v:1119$83 ($add).
  creating $macc model for $add$mkMac.v:1123$85 ($add).
  creating $macc model for $add$mkMac.v:1127$87 ($add).
  creating $macc model for $add$mkMac.v:1131$89 ($add).
  creating $macc model for $add$mkMac.v:1135$91 ($add).
  creating $macc model for $add$mkMac.v:1139$93 ($add).
  creating $macc model for $add$mkMac.v:1143$95 ($add).
  creating $macc model for $add$mkMac.v:1147$97 ($add).
  creating $macc model for $add$mkMac.v:1151$99 ($add).
  creating $macc model for $add$mkMac.v:1155$101 ($add).
  creating $macc model for $add$mkMac.v:1159$103 ($add).
  creating $macc model for $add$mkMac.v:1163$105 ($add).
  creating $macc model for $add$mkMac.v:1167$107 ($add).
  creating $macc model for $add$mkMac.v:1171$109 ($add).
  creating $macc model for $add$mkMac.v:1175$111 ($add).
  creating $macc model for $add$mkMac.v:1179$113 ($add).
  creating $macc model for $add$mkMac.v:1183$115 ($add).
  creating $macc model for $add$mkMac.v:1187$117 ($add).
  creating $macc model for $add$mkMac.v:1191$119 ($add).
  creating $macc model for $add$mkMac.v:1195$121 ($add).
  creating $macc model for $add$mkMac.v:1199$123 ($add).
  creating $macc model for $add$mkMac.v:1203$125 ($add).
  creating $macc model for $add$mkMac.v:1207$127 ($add).
  creating $macc model for $add$mkMac.v:1211$129 ($add).
  creating $macc model for $add$mkMac.v:1215$131 ($add).
  creating $macc model for $add$mkMac.v:1219$133 ($add).
  creating $macc model for $add$mkMac.v:1223$135 ($add).
  creating $macc model for $add$mkMac.v:1227$137 ($add).
  creating $macc model for $add$mkMac.v:1231$139 ($add).
  creating $macc model for $add$mkMac.v:1235$141 ($add).
  creating $macc model for $add$mkMac.v:1239$143 ($add).
  creating $macc model for $add$mkMac.v:990$18 ($add).
  creating $macc model for $add$mkMac.v:994$20 ($add).
  creating $macc model for $add$mkMac.v:998$22 ($add).
  creating $macc model for $sub$mkMac.v:1000$23 ($sub).
  creating $macc model for $sub$mkMac.v:1004$25 ($sub).
  creating $macc model for $sub$mkMac.v:1008$27 ($sub).
  creating $macc model for $sub$mkMac.v:1012$29 ($sub).
  creating $macc model for $sub$mkMac.v:1016$31 ($sub).
  creating $macc model for $sub$mkMac.v:1020$33 ($sub).
  creating $macc model for $sub$mkMac.v:1024$35 ($sub).
  creating $macc model for $sub$mkMac.v:1028$37 ($sub).
  creating $macc model for $sub$mkMac.v:1032$39 ($sub).
  creating $macc model for $sub$mkMac.v:1036$41 ($sub).
  creating $macc model for $sub$mkMac.v:1040$43 ($sub).
  creating $macc model for $sub$mkMac.v:1044$45 ($sub).
  creating $macc model for $sub$mkMac.v:1048$47 ($sub).
  creating $macc model for $sub$mkMac.v:1052$49 ($sub).
  creating $macc model for $sub$mkMac.v:1056$51 ($sub).
  creating $macc model for $sub$mkMac.v:1060$53 ($sub).
  creating $macc model for $sub$mkMac.v:1064$55 ($sub).
  creating $macc model for $sub$mkMac.v:1068$57 ($sub).
  creating $macc model for $sub$mkMac.v:1072$59 ($sub).
  creating $macc model for $sub$mkMac.v:1073$60 ($sub).
  creating $macc model for $sub$mkMac.v:1077$62 ($sub).
  creating $macc model for $sub$mkMac.v:1081$64 ($sub).
  creating $macc model for $sub$mkMac.v:1085$66 ($sub).
  creating $macc model for $sub$mkMac.v:1089$68 ($sub).
  creating $macc model for $sub$mkMac.v:1093$70 ($sub).
  creating $macc model for $sub$mkMac.v:1097$72 ($sub).
  creating $macc model for $sub$mkMac.v:1101$74 ($sub).
  creating $macc model for $sub$mkMac.v:1105$76 ($sub).
  creating $macc model for $sub$mkMac.v:1109$78 ($sub).
  creating $macc model for $sub$mkMac.v:1113$80 ($sub).
  creating $macc model for $sub$mkMac.v:1117$82 ($sub).
  creating $macc model for $sub$mkMac.v:1121$84 ($sub).
  creating $macc model for $sub$mkMac.v:1125$86 ($sub).
  creating $macc model for $sub$mkMac.v:1129$88 ($sub).
  creating $macc model for $sub$mkMac.v:1133$90 ($sub).
  creating $macc model for $sub$mkMac.v:1137$92 ($sub).
  creating $macc model for $sub$mkMac.v:1141$94 ($sub).
  creating $macc model for $sub$mkMac.v:1145$96 ($sub).
  creating $macc model for $sub$mkMac.v:1149$98 ($sub).
  creating $macc model for $sub$mkMac.v:1153$100 ($sub).
  creating $macc model for $sub$mkMac.v:1157$102 ($sub).
  creating $macc model for $sub$mkMac.v:1161$104 ($sub).
  creating $macc model for $sub$mkMac.v:1165$106 ($sub).
  creating $macc model for $sub$mkMac.v:1169$108 ($sub).
  creating $macc model for $sub$mkMac.v:1173$110 ($sub).
  creating $macc model for $sub$mkMac.v:1177$112 ($sub).
  creating $macc model for $sub$mkMac.v:1181$114 ($sub).
  creating $macc model for $sub$mkMac.v:1185$116 ($sub).
  creating $macc model for $sub$mkMac.v:1189$118 ($sub).
  creating $macc model for $sub$mkMac.v:1193$120 ($sub).
  creating $macc model for $sub$mkMac.v:1197$122 ($sub).
  creating $macc model for $sub$mkMac.v:1201$124 ($sub).
  creating $macc model for $sub$mkMac.v:1205$126 ($sub).
  creating $macc model for $sub$mkMac.v:1209$128 ($sub).
  creating $macc model for $sub$mkMac.v:1213$130 ($sub).
  creating $macc model for $sub$mkMac.v:1217$132 ($sub).
  creating $macc model for $sub$mkMac.v:1221$134 ($sub).
  creating $macc model for $sub$mkMac.v:1225$136 ($sub).
  creating $macc model for $sub$mkMac.v:1229$138 ($sub).
  creating $macc model for $sub$mkMac.v:1233$140 ($sub).
  creating $macc model for $sub$mkMac.v:1237$142 ($sub).
  creating $macc model for $sub$mkMac.v:1241$144 ($sub).
  creating $macc model for $sub$mkMac.v:992$19 ($sub).
  creating $macc model for $sub$mkMac.v:996$21 ($sub).
  creating $alu model for $macc $sub$mkMac.v:996$21.
  creating $alu model for $macc $sub$mkMac.v:992$19.
  creating $alu model for $macc $sub$mkMac.v:1241$144.
  creating $alu model for $macc $sub$mkMac.v:1237$142.
  creating $alu model for $macc $sub$mkMac.v:1233$140.
  creating $alu model for $macc $sub$mkMac.v:1229$138.
  creating $alu model for $macc $sub$mkMac.v:1225$136.
  creating $alu model for $macc $sub$mkMac.v:1221$134.
  creating $alu model for $macc $sub$mkMac.v:1217$132.
  creating $alu model for $macc $sub$mkMac.v:1213$130.
  creating $alu model for $macc $sub$mkMac.v:1209$128.
  creating $alu model for $macc $sub$mkMac.v:1205$126.
  creating $alu model for $macc $sub$mkMac.v:1201$124.
  creating $alu model for $macc $sub$mkMac.v:1197$122.
  creating $alu model for $macc $sub$mkMac.v:1193$120.
  creating $alu model for $macc $sub$mkMac.v:1189$118.
  creating $alu model for $macc $sub$mkMac.v:1185$116.
  creating $alu model for $macc $sub$mkMac.v:1181$114.
  creating $alu model for $macc $sub$mkMac.v:1177$112.
  creating $alu model for $macc $sub$mkMac.v:1173$110.
  creating $alu model for $macc $sub$mkMac.v:1169$108.
  creating $alu model for $macc $sub$mkMac.v:1165$106.
  creating $alu model for $macc $sub$mkMac.v:1161$104.
  creating $alu model for $macc $sub$mkMac.v:1157$102.
  creating $alu model for $macc $sub$mkMac.v:1153$100.
  creating $alu model for $macc $sub$mkMac.v:1149$98.
  creating $alu model for $macc $sub$mkMac.v:1145$96.
  creating $alu model for $macc $sub$mkMac.v:1141$94.
  creating $alu model for $macc $sub$mkMac.v:1137$92.
  creating $alu model for $macc $sub$mkMac.v:1133$90.
  creating $alu model for $macc $sub$mkMac.v:1129$88.
  creating $alu model for $macc $sub$mkMac.v:1125$86.
  creating $alu model for $macc $sub$mkMac.v:1121$84.
  creating $alu model for $macc $sub$mkMac.v:1117$82.
  creating $alu model for $macc $sub$mkMac.v:1113$80.
  creating $alu model for $macc $sub$mkMac.v:1109$78.
  creating $alu model for $macc $sub$mkMac.v:1105$76.
  creating $alu model for $macc $sub$mkMac.v:1101$74.
  creating $alu model for $macc $sub$mkMac.v:1097$72.
  creating $alu model for $macc $sub$mkMac.v:1093$70.
  creating $alu model for $macc $sub$mkMac.v:1089$68.
  creating $alu model for $macc $sub$mkMac.v:1085$66.
  creating $alu model for $macc $sub$mkMac.v:1081$64.
  creating $alu model for $macc $sub$mkMac.v:1077$62.
  creating $alu model for $macc $sub$mkMac.v:1073$60.
  creating $alu model for $macc $sub$mkMac.v:1072$59.
  creating $alu model for $macc $sub$mkMac.v:1068$57.
  creating $alu model for $macc $sub$mkMac.v:1064$55.
  creating $alu model for $macc $sub$mkMac.v:1060$53.
  creating $alu model for $macc $sub$mkMac.v:1056$51.
  creating $alu model for $macc $sub$mkMac.v:1052$49.
  creating $alu model for $macc $sub$mkMac.v:1048$47.
  creating $alu model for $macc $sub$mkMac.v:1044$45.
  creating $alu model for $macc $sub$mkMac.v:1040$43.
  creating $alu model for $macc $sub$mkMac.v:1036$41.
  creating $alu model for $macc $sub$mkMac.v:1032$39.
  creating $alu model for $macc $sub$mkMac.v:1028$37.
  creating $alu model for $macc $sub$mkMac.v:1024$35.
  creating $alu model for $macc $sub$mkMac.v:1020$33.
  creating $alu model for $macc $sub$mkMac.v:1016$31.
  creating $alu model for $macc $sub$mkMac.v:1012$29.
  creating $alu model for $macc $sub$mkMac.v:1008$27.
  creating $alu model for $macc $sub$mkMac.v:1004$25.
  creating $alu model for $macc $sub$mkMac.v:1000$23.
  creating $alu model for $macc $add$mkMac.v:998$22.
  creating $alu model for $macc $add$mkMac.v:994$20.
  creating $alu model for $macc $add$mkMac.v:990$18.
  creating $alu model for $macc $add$mkMac.v:1239$143.
  creating $alu model for $macc $add$mkMac.v:1235$141.
  creating $alu model for $macc $add$mkMac.v:1231$139.
  creating $alu model for $macc $add$mkMac.v:1227$137.
  creating $alu model for $macc $add$mkMac.v:1223$135.
  creating $alu model for $macc $add$mkMac.v:1219$133.
  creating $alu model for $macc $add$mkMac.v:1215$131.
  creating $alu model for $macc $add$mkMac.v:1211$129.
  creating $alu model for $macc $add$mkMac.v:1207$127.
  creating $alu model for $macc $add$mkMac.v:1203$125.
  creating $alu model for $macc $add$mkMac.v:1199$123.
  creating $alu model for $macc $add$mkMac.v:1195$121.
  creating $alu model for $macc $add$mkMac.v:1191$119.
  creating $alu model for $macc $add$mkMac.v:1187$117.
  creating $alu model for $macc $add$mkMac.v:1183$115.
  creating $alu model for $macc $add$mkMac.v:1179$113.
  creating $alu model for $macc $add$mkMac.v:1175$111.
  creating $alu model for $macc $add$mkMac.v:1171$109.
  creating $alu model for $macc $add$mkMac.v:1167$107.
  creating $alu model for $macc $add$mkMac.v:1163$105.
  creating $alu model for $macc $add$mkMac.v:1159$103.
  creating $alu model for $macc $add$mkMac.v:1155$101.
  creating $alu model for $macc $add$mkMac.v:1151$99.
  creating $alu model for $macc $add$mkMac.v:1147$97.
  creating $alu model for $macc $add$mkMac.v:1143$95.
  creating $alu model for $macc $add$mkMac.v:1139$93.
  creating $alu model for $macc $add$mkMac.v:1135$91.
  creating $alu model for $macc $add$mkMac.v:1131$89.
  creating $alu model for $macc $add$mkMac.v:1127$87.
  creating $alu model for $macc $add$mkMac.v:1123$85.
  creating $alu model for $macc $add$mkMac.v:1119$83.
  creating $alu model for $macc $add$mkMac.v:1115$81.
  creating $alu model for $macc $add$mkMac.v:1111$79.
  creating $alu model for $macc $add$mkMac.v:1107$77.
  creating $alu model for $macc $add$mkMac.v:1103$75.
  creating $alu model for $macc $add$mkMac.v:1099$73.
  creating $alu model for $macc $add$mkMac.v:1095$71.
  creating $alu model for $macc $add$mkMac.v:1091$69.
  creating $alu model for $macc $add$mkMac.v:1087$67.
  creating $alu model for $macc $add$mkMac.v:1083$65.
  creating $alu model for $macc $add$mkMac.v:1079$63.
  creating $alu model for $macc $add$mkMac.v:1075$61.
  creating $alu model for $macc $add$mkMac.v:1070$58.
  creating $alu model for $macc $add$mkMac.v:1066$56.
  creating $alu model for $macc $add$mkMac.v:1062$54.
  creating $alu model for $macc $add$mkMac.v:1058$52.
  creating $alu model for $macc $add$mkMac.v:1054$50.
  creating $alu model for $macc $add$mkMac.v:1050$48.
  creating $alu model for $macc $add$mkMac.v:1046$46.
  creating $alu model for $macc $add$mkMac.v:1042$44.
  creating $alu model for $macc $add$mkMac.v:1038$42.
  creating $alu model for $macc $add$mkMac.v:1034$40.
  creating $alu model for $macc $add$mkMac.v:1030$38.
  creating $alu model for $macc $add$mkMac.v:1026$36.
  creating $alu model for $macc $add$mkMac.v:1022$34.
  creating $alu model for $macc $add$mkMac.v:1018$32.
  creating $alu model for $macc $add$mkMac.v:1014$30.
  creating $alu model for $macc $add$mkMac.v:1010$28.
  creating $alu model for $macc $add$mkMac.v:1006$26.
  creating $alu model for $macc $add$mkMac.v:1002$24.
  creating $alu cell for $add$mkMac.v:1002$24: $auto$alumacc.cc:474:replace_alu$1152
  creating $alu cell for $add$mkMac.v:1006$26: $auto$alumacc.cc:474:replace_alu$1155
  creating $alu cell for $add$mkMac.v:1010$28: $auto$alumacc.cc:474:replace_alu$1158
  creating $alu cell for $add$mkMac.v:1014$30: $auto$alumacc.cc:474:replace_alu$1161
  creating $alu cell for $add$mkMac.v:1018$32: $auto$alumacc.cc:474:replace_alu$1164
  creating $alu cell for $add$mkMac.v:1022$34: $auto$alumacc.cc:474:replace_alu$1167
  creating $alu cell for $add$mkMac.v:1026$36: $auto$alumacc.cc:474:replace_alu$1170
  creating $alu cell for $add$mkMac.v:1030$38: $auto$alumacc.cc:474:replace_alu$1173
  creating $alu cell for $add$mkMac.v:1034$40: $auto$alumacc.cc:474:replace_alu$1176
  creating $alu cell for $add$mkMac.v:1038$42: $auto$alumacc.cc:474:replace_alu$1179
  creating $alu cell for $add$mkMac.v:1042$44: $auto$alumacc.cc:474:replace_alu$1182
  creating $alu cell for $add$mkMac.v:1046$46: $auto$alumacc.cc:474:replace_alu$1185
  creating $alu cell for $add$mkMac.v:1050$48: $auto$alumacc.cc:474:replace_alu$1188
  creating $alu cell for $add$mkMac.v:1054$50: $auto$alumacc.cc:474:replace_alu$1191
  creating $alu cell for $add$mkMac.v:1058$52: $auto$alumacc.cc:474:replace_alu$1194
  creating $alu cell for $add$mkMac.v:1062$54: $auto$alumacc.cc:474:replace_alu$1197
  creating $alu cell for $add$mkMac.v:1066$56: $auto$alumacc.cc:474:replace_alu$1200
  creating $alu cell for $add$mkMac.v:1070$58: $auto$alumacc.cc:474:replace_alu$1203
  creating $alu cell for $add$mkMac.v:1075$61: $auto$alumacc.cc:474:replace_alu$1206
  creating $alu cell for $add$mkMac.v:1079$63: $auto$alumacc.cc:474:replace_alu$1209
  creating $alu cell for $add$mkMac.v:1083$65: $auto$alumacc.cc:474:replace_alu$1212
  creating $alu cell for $add$mkMac.v:1087$67: $auto$alumacc.cc:474:replace_alu$1215
  creating $alu cell for $add$mkMac.v:1091$69: $auto$alumacc.cc:474:replace_alu$1218
  creating $alu cell for $add$mkMac.v:1095$71: $auto$alumacc.cc:474:replace_alu$1221
  creating $alu cell for $add$mkMac.v:1099$73: $auto$alumacc.cc:474:replace_alu$1224
  creating $alu cell for $add$mkMac.v:1103$75: $auto$alumacc.cc:474:replace_alu$1227
  creating $alu cell for $add$mkMac.v:1107$77: $auto$alumacc.cc:474:replace_alu$1230
  creating $alu cell for $add$mkMac.v:1111$79: $auto$alumacc.cc:474:replace_alu$1233
  creating $alu cell for $add$mkMac.v:1115$81: $auto$alumacc.cc:474:replace_alu$1236
  creating $alu cell for $add$mkMac.v:1119$83: $auto$alumacc.cc:474:replace_alu$1239
  creating $alu cell for $add$mkMac.v:1123$85: $auto$alumacc.cc:474:replace_alu$1242
  creating $alu cell for $add$mkMac.v:1127$87: $auto$alumacc.cc:474:replace_alu$1245
  creating $alu cell for $add$mkMac.v:1131$89: $auto$alumacc.cc:474:replace_alu$1248
  creating $alu cell for $add$mkMac.v:1135$91: $auto$alumacc.cc:474:replace_alu$1251
  creating $alu cell for $add$mkMac.v:1139$93: $auto$alumacc.cc:474:replace_alu$1254
  creating $alu cell for $add$mkMac.v:1143$95: $auto$alumacc.cc:474:replace_alu$1257
  creating $alu cell for $add$mkMac.v:1147$97: $auto$alumacc.cc:474:replace_alu$1260
  creating $alu cell for $add$mkMac.v:1151$99: $auto$alumacc.cc:474:replace_alu$1263
  creating $alu cell for $add$mkMac.v:1155$101: $auto$alumacc.cc:474:replace_alu$1266
  creating $alu cell for $add$mkMac.v:1159$103: $auto$alumacc.cc:474:replace_alu$1269
  creating $alu cell for $add$mkMac.v:1163$105: $auto$alumacc.cc:474:replace_alu$1272
  creating $alu cell for $add$mkMac.v:1167$107: $auto$alumacc.cc:474:replace_alu$1275
  creating $alu cell for $add$mkMac.v:1171$109: $auto$alumacc.cc:474:replace_alu$1278
  creating $alu cell for $add$mkMac.v:1175$111: $auto$alumacc.cc:474:replace_alu$1281
  creating $alu cell for $add$mkMac.v:1179$113: $auto$alumacc.cc:474:replace_alu$1284
  creating $alu cell for $add$mkMac.v:1183$115: $auto$alumacc.cc:474:replace_alu$1287
  creating $alu cell for $add$mkMac.v:1187$117: $auto$alumacc.cc:474:replace_alu$1290
  creating $alu cell for $add$mkMac.v:1191$119: $auto$alumacc.cc:474:replace_alu$1293
  creating $alu cell for $add$mkMac.v:1195$121: $auto$alumacc.cc:474:replace_alu$1296
  creating $alu cell for $add$mkMac.v:1199$123: $auto$alumacc.cc:474:replace_alu$1299
  creating $alu cell for $add$mkMac.v:1203$125: $auto$alumacc.cc:474:replace_alu$1302
  creating $alu cell for $add$mkMac.v:1207$127: $auto$alumacc.cc:474:replace_alu$1305
  creating $alu cell for $add$mkMac.v:1211$129: $auto$alumacc.cc:474:replace_alu$1308
  creating $alu cell for $add$mkMac.v:1215$131: $auto$alumacc.cc:474:replace_alu$1311
  creating $alu cell for $add$mkMac.v:1219$133: $auto$alumacc.cc:474:replace_alu$1314
  creating $alu cell for $add$mkMac.v:1223$135: $auto$alumacc.cc:474:replace_alu$1317
  creating $alu cell for $add$mkMac.v:1227$137: $auto$alumacc.cc:474:replace_alu$1320
  creating $alu cell for $add$mkMac.v:1231$139: $auto$alumacc.cc:474:replace_alu$1323
  creating $alu cell for $add$mkMac.v:1235$141: $auto$alumacc.cc:474:replace_alu$1326
  creating $alu cell for $add$mkMac.v:1239$143: $auto$alumacc.cc:474:replace_alu$1329
  creating $alu cell for $add$mkMac.v:990$18: $auto$alumacc.cc:474:replace_alu$1332
  creating $alu cell for $add$mkMac.v:994$20: $auto$alumacc.cc:474:replace_alu$1335
  creating $alu cell for $add$mkMac.v:998$22: $auto$alumacc.cc:474:replace_alu$1338
  creating $alu cell for $sub$mkMac.v:1000$23: $auto$alumacc.cc:474:replace_alu$1341
  creating $alu cell for $sub$mkMac.v:1004$25: $auto$alumacc.cc:474:replace_alu$1344
  creating $alu cell for $sub$mkMac.v:1008$27: $auto$alumacc.cc:474:replace_alu$1347
  creating $alu cell for $sub$mkMac.v:1012$29: $auto$alumacc.cc:474:replace_alu$1350
  creating $alu cell for $sub$mkMac.v:1016$31: $auto$alumacc.cc:474:replace_alu$1353
  creating $alu cell for $sub$mkMac.v:1020$33: $auto$alumacc.cc:474:replace_alu$1356
  creating $alu cell for $sub$mkMac.v:1024$35: $auto$alumacc.cc:474:replace_alu$1359
  creating $alu cell for $sub$mkMac.v:1028$37: $auto$alumacc.cc:474:replace_alu$1362
  creating $alu cell for $sub$mkMac.v:1032$39: $auto$alumacc.cc:474:replace_alu$1365
  creating $alu cell for $sub$mkMac.v:1036$41: $auto$alumacc.cc:474:replace_alu$1368
  creating $alu cell for $sub$mkMac.v:1040$43: $auto$alumacc.cc:474:replace_alu$1371
  creating $alu cell for $sub$mkMac.v:1044$45: $auto$alumacc.cc:474:replace_alu$1374
  creating $alu cell for $sub$mkMac.v:1048$47: $auto$alumacc.cc:474:replace_alu$1377
  creating $alu cell for $sub$mkMac.v:1052$49: $auto$alumacc.cc:474:replace_alu$1380
  creating $alu cell for $sub$mkMac.v:1056$51: $auto$alumacc.cc:474:replace_alu$1383
  creating $alu cell for $sub$mkMac.v:1060$53: $auto$alumacc.cc:474:replace_alu$1386
  creating $alu cell for $sub$mkMac.v:1064$55: $auto$alumacc.cc:474:replace_alu$1389
  creating $alu cell for $sub$mkMac.v:1068$57: $auto$alumacc.cc:474:replace_alu$1392
  creating $alu cell for $sub$mkMac.v:1072$59: $auto$alumacc.cc:474:replace_alu$1395
  creating $alu cell for $sub$mkMac.v:1073$60: $auto$alumacc.cc:474:replace_alu$1398
  creating $alu cell for $sub$mkMac.v:1077$62: $auto$alumacc.cc:474:replace_alu$1401
  creating $alu cell for $sub$mkMac.v:1081$64: $auto$alumacc.cc:474:replace_alu$1404
  creating $alu cell for $sub$mkMac.v:1085$66: $auto$alumacc.cc:474:replace_alu$1407
  creating $alu cell for $sub$mkMac.v:1089$68: $auto$alumacc.cc:474:replace_alu$1410
  creating $alu cell for $sub$mkMac.v:1093$70: $auto$alumacc.cc:474:replace_alu$1413
  creating $alu cell for $sub$mkMac.v:1097$72: $auto$alumacc.cc:474:replace_alu$1416
  creating $alu cell for $sub$mkMac.v:1101$74: $auto$alumacc.cc:474:replace_alu$1419
  creating $alu cell for $sub$mkMac.v:1105$76: $auto$alumacc.cc:474:replace_alu$1422
  creating $alu cell for $sub$mkMac.v:1109$78: $auto$alumacc.cc:474:replace_alu$1425
  creating $alu cell for $sub$mkMac.v:1113$80: $auto$alumacc.cc:474:replace_alu$1428
  creating $alu cell for $sub$mkMac.v:1117$82: $auto$alumacc.cc:474:replace_alu$1431
  creating $alu cell for $sub$mkMac.v:1121$84: $auto$alumacc.cc:474:replace_alu$1434
  creating $alu cell for $sub$mkMac.v:1125$86: $auto$alumacc.cc:474:replace_alu$1437
  creating $alu cell for $sub$mkMac.v:1129$88: $auto$alumacc.cc:474:replace_alu$1440
  creating $alu cell for $sub$mkMac.v:1133$90: $auto$alumacc.cc:474:replace_alu$1443
  creating $alu cell for $sub$mkMac.v:1137$92: $auto$alumacc.cc:474:replace_alu$1446
  creating $alu cell for $sub$mkMac.v:1141$94: $auto$alumacc.cc:474:replace_alu$1449
  creating $alu cell for $sub$mkMac.v:1145$96: $auto$alumacc.cc:474:replace_alu$1452
  creating $alu cell for $sub$mkMac.v:1149$98: $auto$alumacc.cc:474:replace_alu$1455
  creating $alu cell for $sub$mkMac.v:1153$100: $auto$alumacc.cc:474:replace_alu$1458
  creating $alu cell for $sub$mkMac.v:1157$102: $auto$alumacc.cc:474:replace_alu$1461
  creating $alu cell for $sub$mkMac.v:1161$104: $auto$alumacc.cc:474:replace_alu$1464
  creating $alu cell for $sub$mkMac.v:1165$106: $auto$alumacc.cc:474:replace_alu$1467
  creating $alu cell for $sub$mkMac.v:1169$108: $auto$alumacc.cc:474:replace_alu$1470
  creating $alu cell for $sub$mkMac.v:1173$110: $auto$alumacc.cc:474:replace_alu$1473
  creating $alu cell for $sub$mkMac.v:1177$112: $auto$alumacc.cc:474:replace_alu$1476
  creating $alu cell for $sub$mkMac.v:1181$114: $auto$alumacc.cc:474:replace_alu$1479
  creating $alu cell for $sub$mkMac.v:1185$116: $auto$alumacc.cc:474:replace_alu$1482
  creating $alu cell for $sub$mkMac.v:1189$118: $auto$alumacc.cc:474:replace_alu$1485
  creating $alu cell for $sub$mkMac.v:1193$120: $auto$alumacc.cc:474:replace_alu$1488
  creating $alu cell for $sub$mkMac.v:1197$122: $auto$alumacc.cc:474:replace_alu$1491
  creating $alu cell for $sub$mkMac.v:1201$124: $auto$alumacc.cc:474:replace_alu$1494
  creating $alu cell for $sub$mkMac.v:1205$126: $auto$alumacc.cc:474:replace_alu$1497
  creating $alu cell for $sub$mkMac.v:1209$128: $auto$alumacc.cc:474:replace_alu$1500
  creating $alu cell for $sub$mkMac.v:1213$130: $auto$alumacc.cc:474:replace_alu$1503
  creating $alu cell for $sub$mkMac.v:1217$132: $auto$alumacc.cc:474:replace_alu$1506
  creating $alu cell for $sub$mkMac.v:1221$134: $auto$alumacc.cc:474:replace_alu$1509
  creating $alu cell for $sub$mkMac.v:1225$136: $auto$alumacc.cc:474:replace_alu$1512
  creating $alu cell for $sub$mkMac.v:1229$138: $auto$alumacc.cc:474:replace_alu$1515
  creating $alu cell for $sub$mkMac.v:1233$140: $auto$alumacc.cc:474:replace_alu$1518
  creating $alu cell for $sub$mkMac.v:1237$142: $auto$alumacc.cc:474:replace_alu$1521
  creating $alu cell for $sub$mkMac.v:1241$144: $auto$alumacc.cc:474:replace_alu$1524
  creating $alu cell for $sub$mkMac.v:992$19: $auto$alumacc.cc:474:replace_alu$1527
  creating $alu cell for $sub$mkMac.v:996$21: $auto$alumacc.cc:474:replace_alu$1530
  created 127 $alu and 0 $macc cells.

2.12. Executing SHARE pass (SAT-based resource sharing).

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
Removed a total of 0 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkMac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~71 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkMac.
Performed a total of 0 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
Removed a total of 0 cells.

2.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.

2.13.9. Finished OPT passes. (There is nothing left to do.)

2.14. Executing FSM pass (extract and optimize FSM).

2.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register mkMac.start.

2.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\start' from module `\mkMac'.
  found $dff cell for state register: $procdff$1148
  root of input selection tree: $0\start[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \RST_N
  found state code: 2'00
  found ctrl input: \start$EN
  found ctrl input: \output_acc$EN
  found state code: 2'01
  found ctrl output: \RDY_put_val
  found ctrl output: \output_acc$EN
  ctrl inputs: { \start$EN \RST_N }
  ctrl outputs: { $0\start[1:0] \output_acc$EN \RDY_put_val }
  transition:       2'00 2'-0 ->       2'00 4'0001
  transition:       2'00 2'01 ->       2'00 4'0001
  transition:       2'00 2'11 ->       2'01 4'0101
  transition:       2'01 2'-0 ->       2'00 4'0010
  transition:       2'01 2'01 ->       2'01 4'0110
  transition:       2'01 2'11 ->       2'00 4'0010

2.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\start$1533' from module `\mkMac'.

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..
Removed 6 unused cells and 6 unused wires.
<suppressed ~8 debug messages>

2.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\start$1533' from module `\mkMac'.
  Removing unused output signal $0\start[1:0] [0].
  Removing unused output signal $0\start[1:0] [1].

2.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\start$1533' from module `\mkMac' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> -1
  01 -> 1-

2.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\start$1533' from module `\mkMac':
-------------------------------------

  Information on FSM $fsm$\start$1533 (\start):

  Number of input signals:    2
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \RST_N
    1: \start$EN

  Output signals:
    0: \RDY_put_val
    1: \output_acc$EN

  State encoding:
    0:       2'-1  <RESET STATE>
    1:       2'1-

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'-0   ->     0 2'01
      1:     0 2'01   ->     0 2'01
      2:     0 2'11   ->     1 2'01
      3:     1 2'-0   ->     0 2'10
      4:     1 2'11   ->     0 2'10
      5:     1 2'01   ->     1 2'10

-------------------------------------

2.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\start$1533' from module `\mkMac'.

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.
<suppressed ~1 debug messages>

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

2.15.5. Finished fast OPT passes.

2.16. Executing MEMORY pass.

2.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..

2.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..

2.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..

2.18. Executing OPT pass (performing simple optimizations).

2.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.
<suppressed ~1 debug messages>

2.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
Removed a total of 0 cells.

2.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..

2.18.5. Finished fast OPT passes.

2.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.20. Executing OPT pass (performing simple optimizations).

2.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.

2.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
Removed a total of 0 cells.

2.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkMac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~70 debug messages>

2.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkMac.
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$1551: { $auto$fsm_map.cc:118:implement_pattern_cache$1545 $auto$fsm_map.cc:118:implement_pattern_cache$1549 $auto$fsm_map.cc:74:implement_pattern_cache$1541 }
  Optimizing cells in module \mkMac.
Performed a total of 1 changes.

2.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
Removed a total of 0 cells.

2.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..

2.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.

2.20.9. Rerunning OPT passes. (Maybe there is more to do..)

2.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkMac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~70 debug messages>

2.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkMac.
Performed a total of 0 changes.

2.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
Removed a total of 0 cells.

2.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..

2.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.

2.20.16. Finished OPT passes. (There is nothing left to do.)

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.21.2. Continuing TECHMAP pass.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=64\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=64\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=64 for cells of type $lcu.
No more expansions possible.
<suppressed ~44573 debug messages>

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.
<suppressed ~8941 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
<suppressed ~12474 debug messages>
Removed a total of 4158 cells.

2.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..
Removed 6243 unused cells and 18104 unused wires.
<suppressed ~6244 debug messages>

2.22.5. Finished fast OPT passes.

2.23. Executing ABC pass (technology mapping using ABC).

2.23.1. Extracting gate netlist of module `\mkMac' to `<abc-temp-dir>/input.blif'..
Extracted 78088 gates and 78862 wires to a netlist network with 772 inputs and 642 outputs.

2.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:     1049
ABC RESULTS:            ANDNOT cells:    17108
ABC RESULTS:              AOI3 cells:     6843
ABC RESULTS:              AOI4 cells:     3612
ABC RESULTS:               MUX cells:     4005
ABC RESULTS:              NAND cells:     1286
ABC RESULTS:               NOR cells:     3567
ABC RESULTS:               NOT cells:     2775
ABC RESULTS:              OAI3 cells:     3751
ABC RESULTS:              OAI4 cells:      421
ABC RESULTS:                OR cells:     3425
ABC RESULTS:             ORNOT cells:     4081
ABC RESULTS:              XNOR cells:     3059
ABC RESULTS:               XOR cells:    13875
ABC RESULTS:        internal signals:    77448
ABC RESULTS:           input signals:      772
ABC RESULTS:          output signals:      642
Removing temp directory.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkMac.
<suppressed ~132 debug messages>

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkMac'.
<suppressed ~2046 debug messages>
Removed a total of 682 cells.

2.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkMac..
Removed 0 unused cells and 31347 unused wires.
<suppressed ~767 debug messages>

2.24.5. Finished fast OPT passes.

2.25. Executing HIERARCHY pass (managing design hierarchy).

2.26. Printing statistics.

=== mkMac ===

   Number of wires:              67575
   Number of wire bits:          69602
   Number of public wires:          33
   Number of public wire bits:    1427
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              68817
     $_ANDNOT_                   17108
     $_AND_                       1049
     $_AOI3_                      6843
     $_AOI4_                      3612
     $_DFF_P_                      642
     $_MUX_                       4003
     $_NAND_                      1286
     $_NOR_                       3567
     $_NOT_                       2775
     $_OAI3_                      3751
     $_OAI4_                       421
     $_ORNOT_                     4081
     $_OR_                        3425
     $_XNOR_                      3059
     $_XOR_                      13195

2.27. Executing CHECK pass (checking for obvious problems).
checking module mkMac..
found and reported 0 problems.

-- Writing to `mkMac.blif' using backend `blif' --

3. Executing BLIF backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: bc880a4156
CPU: user 31.43s system 0.13s, MEM: 316.64 MB total, 301.24 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 39% 17x opt_clean (12 sec), 16% 14x opt_merge (5 sec), ...
